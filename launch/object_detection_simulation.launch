<launch>
    <param name="use_sim_time"                          value="true" />


    <!-- TOPICS + TrANSFOMRATIONS -->
    <arg name="down_image"                              default="/down_camera/rgb/image_raw"/>
    <arg name="forw_pointcloud"                         default="/forw_camera/depth/points"/>
    <arg name="down_frame_id"                           default="down_camera_link"/>
    <arg name="forw_frame_id"                           default="forw_camera_link"/>
    <node pkg="tf" type="static_transform_publisher"    name="tf_forw"      args="0 0 0 -1.57 0 -1.57 fcu $(arg forw_frame_id) 40"/>
    <node pkg="tf" type="static_transform_publisher"    name="tf_down"      args="0 0 0 -1.57 0 -3.14 fcu $(arg down_frame_id) 40"/> 
    <node pkg="tf" type="static_transform_publisher"    name="tf_origin"    args="0 0 0 0 0 0 world local_origin 10"/>


    <!-- SITL: PX4 + MAVROS -->
    <!--env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find object_detection_simulation)/models"/-->
    <arg name="world_file_name"                         default="object_detection" />
    <include file="$(find local_planner)/launch/local_planner_sitl_mavros.launch" >
        <arg name="model"                               value="$(find object_detection_simulation)/models/iris_two_cameras" />
        <arg name="world_path"                          value="$(find object_detection_simulation)/worlds/$(arg world_file_name).world" />
    </include>
    

    <!-- LOCAL PLANNER -->
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find local_planner)/resource/custom_rosconsole.conf"/>
    <rosparam command="load" file="$(find local_planner)/cfg/params.yaml"/>
    <node name="local_planner_node" pkg="local_planner" type="local_planner_node" output="log" >
        <param name="goal_x_param"                      value="3" />
        <param name="goal_y_param"                      value="8"/>
        <param name="goal_z_param"                      value="5" />
        <param name="world_name"                        value="$(find object_detection_simulation)/worlds/$(arg world_file_name).world" />
        <rosparam param="pointcloud_topics" subst_value="True">[$(arg forw_pointcloud)]</rosparam> 
    </node>
    

    <!-- DARKNET OBJECT DETECTION -->
    <arg name="darknet_bounding_boxes_topics"           default="/darknet_ros/bounding_boxes" />
    <arg name="yolo_weights_path"                       default="$(find darknet_ros)/yolo_network_config/weights"/>
    <arg name="yolo_config_path"                        default="$(find darknet_ros)/yolo_network_config/cfg"/>
    <rosparam command="load" ns="darknet_ros"           file="$(find darknet_ros)/config/ros.yaml"/>
    <rosparam command="load" ns="darknet_ros"           file="$(find darknet_ros)/config/yolov2-tiny-voc.yaml"/>
    <node pkg="darknet_ros"       type="darknet_ros" name="darknet_ros" output="log" launch-prefix="">
        <param name="weights_path"                      value="$(arg yolo_weights_path)" />
        <param name="config_path"                       value="$(arg yolo_config_path)"  />
        <param name="subscribers/camera_reading/topic"  value="$(arg down_image)"/>
        <param name="publishers/bounding_boxes/topic"   value="$(arg darknet_bounding_boxes_topics)"/>
    </node>


    <!-- TAREK's LOCALIZATION NODE -->
    <node pkg="tf" type="static_transform_publisher"    name="zed_to_simulation_frame"    args="0 0 0 0 0 0 $(arg down_frame_id) zed_left_camera_optical_frame 40"/>
    <node pkg="object_localization" type="object_localization_node.py" name="object_localization"  output="screen">
    </node>


    <!-- RVIZ -->
    <node pkg="rviz" type="rviz" output="screen" name="rviz" respawn="true"
          args="-d $(find object_detection_simulation)/resource/object_detection.rviz" />

</launch>


